//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by iocli, run 'iocli gen' to re-generate

package websocketService

import (
	autowire "github.com/alibaba/ioc-golang/autowire"
	normal "github.com/alibaba/ioc-golang/autowire/normal"
	singleton "github.com/alibaba/ioc-golang/autowire/singleton"
	util "github.com/alibaba/ioc-golang/autowire/util"
	"github.com/google/uuid"
	"github.com/gorilla/websocket"
)

func init() {
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &websocketService_{}
		},
	})
	websocketServiceStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &WebsocketService{}
		},
		ConstructFunc: func(i interface{}, _ interface{}) (interface{}, error) {
			impl := i.(*WebsocketService)
			var constructFunc WebsocketServiceConstructFunc = NewWebsocketService
			return constructFunc(impl)
		},
		Metadata: map[string]interface{}{
			"aop":      map[string]interface{}{},
			"autowire": map[string]interface{}{},
		},
	}
	singleton.RegisterStructDescriptor(websocketServiceStructDescriptor)
}

type WebsocketServiceConstructFunc func(impl *WebsocketService) (*WebsocketService, error)
type websocketService_ struct {
	CreateConnection_ func(conn *websocket.Conn, openHandler func(uuid.UUID) error, receiveHandler func(uuid.UUID, int, []byte) error, closeHandler func(uuid.UUID, error)) error
	Send_             func(id uuid.UUID, msgType int, msgBytes []byte) error
}

func (w *websocketService_) CreateConnection(conn *websocket.Conn, openHandler func(uuid.UUID) error, receiveHandler func(uuid.UUID, int, []byte) error, closeHandler func(uuid.UUID, error)) error {
	return w.CreateConnection_(conn, openHandler, receiveHandler, closeHandler)
}

func (w *websocketService_) Send(id uuid.UUID, msgType int, msgBytes []byte) error {
	return w.Send_(id, msgType, msgBytes)
}

type WebsocketServiceIOCInterface interface {
	CreateConnection(conn *websocket.Conn, openHandler func(uuid.UUID) error, receiveHandler func(uuid.UUID, int, []byte) error, closeHandler func(uuid.UUID, error)) error
	Send(id uuid.UUID, msgType int, msgBytes []byte) error
}

var _websocketServiceSDID string

func GetWebsocketServiceSingleton() (*WebsocketService, error) {
	if _websocketServiceSDID == "" {
		_websocketServiceSDID = util.GetSDIDByStructPtr(new(WebsocketService))
	}
	i, err := singleton.GetImpl(_websocketServiceSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(*WebsocketService)
	return impl, nil
}

func GetWebsocketServiceIOCInterfaceSingleton() (WebsocketServiceIOCInterface, error) {
	if _websocketServiceSDID == "" {
		_websocketServiceSDID = util.GetSDIDByStructPtr(new(WebsocketService))
	}
	i, err := singleton.GetImplWithProxy(_websocketServiceSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(WebsocketServiceIOCInterface)
	return impl, nil
}

type ThisWebsocketService struct {
}

func (t *ThisWebsocketService) This() WebsocketServiceIOCInterface {
	thisPtr, _ := GetWebsocketServiceIOCInterfaceSingleton()
	return thisPtr
}
